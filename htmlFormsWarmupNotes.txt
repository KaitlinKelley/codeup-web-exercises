# HTML Forms Pre Lesson
1. What HTTP methods can we use in forms?
GET and POST are the main methods, there are others, but html limits us to GET and POST

2. What happens if we do not specify a method?
The default method is GET

3. What is a `GET` method?
Used to request information, without changing anything server-side. This will also include the inputted data in the URL(as query string)

4. What is a `POST` method?
Will make changes to the existing data on the server, will NOT display in the URL(good for sensitive info)

5. What is the `action` attribute used for?
Indicates where the input data will be sent. If not specified, will send data back to current URL

6. What is a `query string`?


7. How are query strings structured?
?key=value&&key2=value2&&key3=value3

8. How do we submit a form?
Using an input type=submit, or submit button (something with type value of submit)

9. What are some common form input elements?
<input type="text">, <textarea></textarea>, <input type="radio">, <input type="checkbox">

10. How can we use name and value attributes?
If we don't use the name attribute, the data won't actually get sent through. MUST HAVE A NAME ATTRIBUTE.
The value of the name attribute will become the name of the key that corresponds to the value of the current input.
<form>
    <input name="the_answer" value="42">
    <input type="submit">
</form>
When submitted, this happens...
?the_answer=42

11. How do you disable an input?
Add disabled attribute
<input type="text" name="username" value="codeup" disabled>

12. How do you hide an input?
<input type="hidden">

13. What are `labels` used for?
To label form inputs.
Make sure label element has a for attribute.
The for attribute should match the id attribute of whatever is being labeled.

Bonus
* Describe the following:
  *   Text Inputs
  Basic text input element, small area to type in. Can be set to type "text" or "password", etc. Can use placeholder text.
  *   Text Areas
  Larger area to type in, but similar to text.
  Size can be specified and changed.
  NOT A VOID ELEMENT.
  Uses its contents instead of value attribute.
  *   Checkbox and Radio Buttons
  Can be used for multiple choice questions, or for the user to select several things out of a list.
  Can be preselected using checked attribute
  Usually placed inside a label element (label wraps it)
  Multiple elements relating to the same question should share name attribute
  *   Selects
  Drop-down menu
  Each choice is an option element
  Content of option element is what the user sees, the value attribute is what gets submitted
  Select element (parent) has name attribute, option elements (child elements) have value attributes



  ===========================================================================================
  Consider the appropriate HTTP method (GET or POST) for the following user actions:
  - A user navigates to https://google.com in their browser
  GET

  - A user clicks on the view more button on an E-Commerce site
  GET

  - A user logs in to a web application
  POST...probably using a username and password, needs to be secure

  - A user upvotes a YouTube video
  POST...server is tracking number of votes

  - A user deletes a comment
  POST...server is tracking comments and adjusting accordingly

  - A user searches for “Codeup” in Google
  GET

  - A user is redirected to the home page after logging out of an application
  GET

  - A user adds an item to a shopping cart on Amazon
  POST...server is tracking cart contents, saving the info to use at checkout

  - A user re-sorts search engine results to display most recent to least recent results
  POST...server now needs to update what is recent?

  - A user clicks “not interested” on a house listing in a real estate app
  POST